package com.gsoft.keyhandover;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.gsoft.keyhandover.buz.RemouldBuz;
import com.gsoft.keyhandover.entity.ProjectEntity;
import com.gsoft.keyhandover.entity.SequenceOrState;
import com.gsoft.keyhandover.entity.TrainEntity;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;

/**
 * Created by Administrator on 2018/1/17.
 */

public class RemouldQualityActivty extends Activity implements View.OnClickListener {
    /**
     * 改造质检
     */
    private Spinner mGaoZhiJian_CheZu_sp;
    private Spinner mGaoZhiJian_XiangMu_sp;
    private ImageView mattachment_download;
    private RelativeLayout selectDate, selectTime;
    private TextView currentDate, currentTime;
    private CustomDatePicker customDatePicker1, customDatePicker2;//时间
    private TextView mtextview_title;
    private RemouldQuality_Adapter remouldQuality_adapter;

    //车组号
    private ArrayAdapter<String> CarNum_Adapter;//车组号适配器
    private List<String> CarNum_data_list;
    private String carscode;//车组赋值
    private String getCarCode;//获取车组
    private RemouldBuz.TrainsResult carnum_data; //车组号获取
    //项目
    private String Project;//项目名称赋值
    private String getProjectID;//获取项目名称
    private List<String> Project_data_list = new ArrayList<>();//项目列表
    private ArrayAdapter<String> Project_adapter;//项目适配器
    private RemouldBuz.ProjectResult Project_data;//项目名称
    //查询结果
    ArrayList<Map<String, Object>> ZuoYe_list = new ArrayList<Map<String, Object>>();//查询辆序与状态结果
    private ListView mRemouldQuality_list;
    private ImageView mRemouldQuality_ChaXun_img;//查询

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activty_remouldquality);
        InStantiation();
    }

    //实例化
    public void InStantiation() {
        mGaoZhiJian_CheZu_sp = findViewById(R.id.GaoZhiJian_CheZu_sp);
        mGaoZhiJian_XiangMu_sp = findViewById(R.id.GaoZhiJian_XiangMu_sp);
        mattachment_download = findViewById(R.id.attachment_download);
        mattachment_download.setOnClickListener(this);
        selectTime = findViewById(R.id.selectTime);
        selectTime.setOnClickListener(this);
        selectDate = findViewById(R.id.selectDate);
        selectDate.setOnClickListener(this);
        currentDate = findViewById(R.id.currentDate);
        currentTime = findViewById(R.id.currentTime);
        mRemouldQuality_list = findViewById(R.id.RemouldQuality_list);
        mRemouldQuality_ChaXun_img = findViewById(R.id.RemouldQuality_ChaXun_img);
        mRemouldQuality_ChaXun_img.setOnClickListener(this);
        mtextview_title = findViewById(R.id.textview_title);
        mtextview_title.setText("改造质检");
        remouldQuality_adapter = new RemouldQuality_Adapter(RemouldQualityActivty.this, ZuoYe_list);
        mRemouldQuality_list.setAdapter(remouldQuality_adapter);

        mRemouldQuality_list.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                Intent startjob = new Intent(RemouldQualityActivty.this, RemouldImplement_StartJob_Activty.class);
                startjob.putExtra("trainOrder", ZuoYe_list.get(i).get("oder").toString());
                startjob.putExtra("trainCode", getCarCode);
                startjob.putExtra("trainName", carscode);
                startjob.putExtra("operationId", getProjectID);
                startjob.putExtra("detailId", ZuoYe_list.get(i).get("detailId").toString());
                startActivity(startjob);
            }
        });
        initDatePicker();
        TrainsNum(currentDate.getText().toString());//车组号
    }

    //时间选择
    private void initDatePicker() {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm", Locale.CHINA);
        String now = sdf.format(new Date());
        currentDate.setText(now.split(" ")[0]);
        currentTime.setText(now);

        customDatePicker1 = new CustomDatePicker(this, new CustomDatePicker.ResultHandler() {
            @Override
            public void handle(String time) { // 回调接口，获得选中的时间
                currentDate.setText(time.split(" ")[0]);
                ZuoYe_list.clear();
                remouldQuality_adapter.notifyDataSetChanged();
                TrainsNum(currentDate.getText().toString());

            }
        }, "2010-01-01 00:00", now); // 初始化日期格式请用：yyyy-MM-dd HH:mm，否则不能正常运行
        customDatePicker1.showSpecificTime(false); // 不显示时和分
        customDatePicker1.setIsLoop(false); // 不允许循环滚动

//        customDatePicker2 = new CustomDatePicker(this, new CustomDatePicker.ResultHandler() {
//            @Override
//            public void handle(String time) { // 回调接口，获得选中的时间
//                currentTime.setText(time);
//                TrainsNum(currentDate.getText().toString());
//            }
//        }, "2010-01-01 00:00", now);
//        customDatePicker2.showSpecificTime(true); // 显示时和分
//        customDatePicker2.setIsLoop(true); // 允许循环滚动
    }

    //车组号适配器初始化
    public void TrainsNum(final String time) {
        CarNum_data_list = new ArrayList<String>();//车组号列表
        CarNum_data_list.clear();
        new Thread(new Runnable() {
            @Override
            public void run() {
                //车组号数据请求
                try {
                    carnum_data = RemouldBuz.getTracks(time);
                    if (carnum_data.data.size() > 0) {
                        for (TrainEntity data : carnum_data.data) {
                            CarNum_data_list.add(data.getTrainName());
                        }
                    } else {
                    }
                } catch (Exception e) {
                    return;
                }

            }
        }).start();
        CarNum_data_list.add("无");
        if (CarNum_data_list.size() > 1) {
            mGaoZhiJian_CheZu_sp.setSelection(1);
        } else {

        }
        //下拉车组号适配器
        CarNum_Adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, CarNum_data_list);
        CarNum_Adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        mGaoZhiJian_CheZu_sp.setAdapter(CarNum_Adapter);
//        mGaoZaoShiShi_CheZu_sp.setSelection(1, true);
        mGaoZhiJian_CheZu_sp.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                try {
                    carscode = mGaoZhiJian_CheZu_sp.getSelectedItem().toString();
                    if (carnum_data.data.size() > 0) {
                        for (TrainEntity data : carnum_data.data) {
                            if (data.getTrainName().equals(carscode)) {
                                getCarCode = data.getTrainCode();
                                break;
                            }
                        }

                    }
                    Log.e("lz", "code" + getCarCode);
                    ProJectName(getCarCode, currentDate.getText().toString());
                } catch (Exception e) {
                    return;
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> adapterView) {

            }


        });

    }

    //项目适配器初始化
    public void ProJectName(final String TrainCode, final String date) {
        Project_data_list.clear();

        new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    Project_data = RemouldBuz.getProject(TrainCode, date);
                    for (ProjectEntity data : Project_data.data) {
                        Project_data_list.add(data.getProjectName());
                    }
                } catch (Exception e) {
                    return;
                }
            }
        }).start();

        //下拉项目适配器
        Project_data_list.add("无");
        Project_adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, Project_data_list);
        Project_adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
        mGaoZhiJian_XiangMu_sp.setAdapter(Project_adapter);
        mGaoZhiJian_XiangMu_sp.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
            @Override
            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                try {
                    Project = mGaoZhiJian_XiangMu_sp.getSelectedItem().toString();
                    if (carnum_data.data.size() > 0) {
                        for (ProjectEntity data : Project_data.data) {
                            if (data.getProjectName().equals(Project)) {
                                getProjectID = data.getOperationId().toString();
                                break;
                            }
                        }
                    }
                } catch (Exception e) {
                    return;
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> adapterView) {

            }
        });
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.selectDate:
                customDatePicker1.show(currentDate.getText().toString());
                break;
            case R.id.selectTime:
                customDatePicker2.show(currentTime.getText().toString());
                break;
            case R.id.attachment_download:
                try {
                    if (!getProjectID.isEmpty()) {
                        Intent attDownload = new Intent(RemouldQualityActivty.this, FileShowActivity.class);
                        attDownload.putExtra("operationId", getProjectID);
                        startActivity(attDownload);
                    } else {
                        Toast.makeText(RemouldQualityActivty.this, "请选择项目！", Toast.LENGTH_SHORT).show();
                    }
                } catch (Exception e) {
                    Toast.makeText(RemouldQualityActivty.this, "有选项未选择！", Toast.LENGTH_SHORT).show();
                }
                break;
            case R.id.RemouldQuality_ChaXun_img:
                HttpChaXun();
                break;
        }
    }

    //请求查询结果
    public void HttpChaXun() {
        try {
            if (getProjectID.isEmpty()) {
                Toast.makeText(RemouldQualityActivty.this, "有选项未选择！", Toast.LENGTH_SHORT).show();
            } else {
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        final RemouldBuz.SequenceOrStateResult sequenceOrState_data = RemouldBuz.getSequenceOrState(getProjectID, getCarCode);
                        if (sequenceOrState_data.data.size() > 0) {
                            runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    ZuoYe_list.clear();
                                    for (SequenceOrState data : sequenceOrState_data.data) {
                                        Map<String, Object> map = new HashMap<String, Object>();
                                        map.put("detailId", data.getDetailId());
                                        map.put("oder", data.getTrainOrder());
                                        map.put("statu", data.getStatus());
                                        ZuoYe_list.add(map);
                                        remouldQuality_adapter.notifyDataSetChanged();
                                    }
                                }
                            });
                        } else {
                            return;
                        }

                    }
                }).start();
            }

        } catch (Exception e) {
            return;
        }
    }

    @Override
    protected void onResume() {
        HttpChaXun();
        //remouldQuality_adapter.notifyDataSetChanged();
        super.onResume();
    }
}
