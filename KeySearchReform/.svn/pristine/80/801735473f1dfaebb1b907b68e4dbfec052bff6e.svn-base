package com.gsoft.keyhandover.fragment;

import android.content.Context;
import android.support.v4.app.Fragment;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.gsoft.keyhandover.R;
import com.gsoft.keyhandover.buz.RemouldBuz;
import com.gsoft.keyhandover.entity.SearchInfoEntity;
import com.gsoft.keyhandover.entity.TrainKeyResultEntity;
import com.gsoft.keyhandover.entity.TrainsKeyEntity;
import com.gsoft.keyhandover.util.L;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by Administrator on 2018/3/22.
 */


public class KeyFragment2 extends Fragment implements View.OnClickListener {
    private Spinner mCar_Type_sp, mCarNum_sp, mKey_Name_sp;
    private ImageView mKeyChaXun_img;
    private TextView mtextview_title;
    private View view = null;// 缓存Fragment view
    //一级适配车型
    private ArrayAdapter<String> CarType_Adapter;//车组号适配器
    private List<String> CarType_list = new ArrayList<>();
    private RemouldBuz.TrainsTypeResult trainsTypeResult;
    String traintype;
    //二级车组号
    private ArrayAdapter<String> CarNum_Adapter;//车组号适配器
    private List<String> CarNum_list = new ArrayList<>();
    private RemouldBuz.TrainsNumResult trainsNumResult;
    String Trainnum;

    //三级级车组号
    private ArrayAdapter<String> KeyNum_Adapter;//车组号适配器
    private List<String> KeyNum_list = new ArrayList<>();
    private RemouldBuz.TrainsKeyNameResult trainsKeyNameResult;
    String Keyname;
    //结果
    private TextView mJieyongren_txt, mJieyongTime_txt, mZhuangtai_txt;
    private RemouldBuz.TrainsKeyResult trainsKeyResult;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        if (view == null) {
            view = inflater.inflate(R.layout.keyfragment2, null);
            mtextview_title = view.findViewById(R.id.textview_title);
            mtextview_title.setText("钥匙状态查询");
            mCar_Type_sp = view.findViewById(R.id.Car_Type_sp);
            mCarNum_sp = view.findViewById(R.id.CarNum_sp);
            mKey_Name_sp = view.findViewById(R.id.Key_Name_sp);
            mJieyongren_txt = view.findViewById(R.id.Jieyongren_txt);
            mJieyongTime_txt = view.findViewById(R.id.JieyongTime_txt);
            mZhuangtai_txt = view.findViewById(R.id.Zhuangtai_txt);
            mKeyChaXun_img = view.findViewById(R.id.KeyChaXun_img);
            mKeyChaXun_img.setOnClickListener(this);
            CarType_Adapter = new ArrayAdapter<String>(getActivity(), R.layout.project_option_item, R.id.project_item_text, CarType_list);
            mCar_Type_sp.setAdapter(CarType_Adapter);
            mCar_Type_sp.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                @Override
                public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                    traintype = mCar_Type_sp.getSelectedItem().toString();
                    CarNum(traintype);
                }

                @Override
                public void onNothingSelected(AdapterView<?> adapterView) {

                }
            });
            CarNum_Adapter = new ArrayAdapter<String>(getActivity(), R.layout.project_option_item, R.id.project_item_text, CarNum_list);
            mCarNum_sp.setAdapter(CarNum_Adapter);
            mCarNum_sp.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                @Override
                public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                    Trainnum = mCarNum_sp.getSelectedItem().toString();
                    KeyName(traintype, Trainnum);
                }

                @Override
                public void onNothingSelected(AdapterView<?> adapterView) {
                }
            });
            KeyNum_Adapter = new ArrayAdapter<String>(getActivity(), R.layout.project_option_item, R.id.project_item_text, KeyNum_list);
            mKey_Name_sp.setAdapter(KeyNum_Adapter);
            mKey_Name_sp.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                @Override
                public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
                    Keyname = mKey_Name_sp.getSelectedItem().toString();
                }

                @Override
                public void onNothingSelected(AdapterView<?> adapterView) {
                }
            });
            Typecar();
        }
        // 缓存的rootView需要判断是否已经被加过parent，
        // 如果有parent需要从parent删除，要不然会发生这个rootview已经有parent的错误。
        ViewGroup parent = (ViewGroup) view.getParent();
        if (parent != null) {
            parent.removeView(view);
        }
        return view;
    }

    //适用车型
    public void Typecar() {
        CarType_list.clear();
        try {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    trainsTypeResult = RemouldBuz.getTraintype();
                    getActivity().runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            try {
                                for (TrainsKeyEntity data : trainsTypeResult.data) {

                                    CarType_list.add(data.getTrainType());
                                }

                            } catch (Exception e) {
                                return;
                            }
                            CarType_Adapter.notifyDataSetChanged();
                        }
                    });

                }
            }).start();
        } catch (Exception e) {
            return;
        }
    }

    //车组号
    public void CarNum(final String Traintype) {

        CarNum_list.clear();
        try {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    trainsNumResult = RemouldBuz.getTrainNum(Traintype);
                    getActivity().runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            try {

                                for (TrainsKeyEntity data : trainsNumResult.data) {
                                    CarNum_list.add(data.getTrainNumber());
                                }
                            } catch (Exception e) {
                                return;
                            }
                            CarNum_Adapter.notifyDataSetChanged();
                        }
                    });

                }
            }).start();
        } catch (Exception e) {
            return;
        }
        KeyName(traintype, Trainnum);
    }

    //钥匙
    public void KeyName(final String Traintype, final String TrainNum) {
        KeyNum_list.clear();
        try {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    trainsKeyNameResult = RemouldBuz.getTrainKeyName(Traintype, TrainNum);
                    getActivity().runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            try {
                                for (TrainsKeyEntity data : trainsKeyNameResult.data) {
                                    KeyNum_list.add(data.getKeyName());
                                }
                            } catch (Exception e) {
                                return;
                            }

                            KeyNum_Adapter.notifyDataSetChanged();
                        }
                    });
                }
            }).start();
        } catch (Exception e) {
            return;
        }
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.KeyChaXun_img:
                mJieyongren_txt.setText("");
                mJieyongTime_txt.setText("");
                mZhuangtai_txt.setText("");
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        Log.e("LZ-----", traintype + ":" + Trainnum + ":" + Keyname);
                        trainsKeyResult = RemouldBuz.getTrainKey(traintype, Trainnum, Keyname);
                        getActivity().runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                try {
                                    for (TrainKeyResultEntity data : trainsKeyResult.data) {
                                        mJieyongren_txt.setText(data.getBorrower().toString());
                                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                                        mJieyongTime_txt.setText(sdf.format(data.getBTime()));
                                        int state = data.getState();
                                        if (state == 0) {
                                            mZhuangtai_txt.setText("申请中");
                                        } else if (state == 1) {
                                            mZhuangtai_txt.setText("已借出");
                                        } else if (state == 2) {
                                            mZhuangtai_txt.setText("归还中");
                                        } else if (state == 3) {
                                            mZhuangtai_txt.setText("已归还");
                                        } else {
                                            mZhuangtai_txt.setText("未知");
                                        }

                                    }
                                } catch (Exception e) {
                                    return;
                                }
                            }
                        });
                    }
                }).
                        start();
                break;
        }
    }

    @Override
    public void onPause() {
        super.onPause();
    }

    @Override
    public void onDestroy() {
        getActivity().onBackPressed();
        super.onDestroy();
    }
}
